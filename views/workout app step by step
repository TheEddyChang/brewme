workout app step by step

mkdir workout-app
touch html, css, js
git init
git add
git commit "initial init"
subl .


*////HTML file:
set up CDNs: boostrap css, jquery/ajax (above bootstrap, style sheet, handlebars, bootstrap js, customer js (all on top of body)

<body>
<div class="container">
<div class="row">
<div class="col-md-6" col-md-offset-3">
	<h1></h1>
		<ul id="workouts-list">                               <-----hardcoding some text for handlebars
		  <script id="workouts-template" type="text/x-handlebars-template" >        we put it in script tag..doesnt run as javascript code..give speciaID 
              

              {{#each workouts}} //pass an array
                  <li>{{excercise}}-{{category}}</li>   
              {{/each}}
		  

		  </script>
 			


 			<li>run</li>
 			<li>yoga</li>


 			check your site to make sure nothings broken!





///////JS
*go to your js and set up initial JS SANITY CHECK and document ready....(check javascript console for errors)

-compile handlebars template first thing

var source = #('workouts-template').html();   //matches line 20 script id
var template = Handlebars.compile(source);   //we can plug data into template later in the app





//array of test data

var allWorkouts = [
{ excercise : "" },      //moved hard code data in our view to here---line 32 & 33
{ category : ""  }

];
                            //ajax call to get all workouts
                            $.get('/api/workouts', function(data) {
                            console.log(data);
                            
                            //data has to match #each
                            varworkoutsHtml = template({ workouts: allWorkouts});
                            
                            //match line 19
       						$(#workouts-list).append(workoutsHtml);


                            });


/////SETTING UP SERVER SIDE STUFF
                            ****** npm init   CHANGE ENTRY POINT TO SERVER.JS
                            *******npm install --save express body-parser hbs

                            //ORGANIZE FILES ---need to live inside public folder so server.js can serve them
                            //.gitignore(node_modules)
                            //mkdir public (css and js) and views (html lives in here and also change .html to .hbs)

                            commit express setup****
/////SERVER.JS

need to require modules you just installed
body-parser = lets us get data out of forms and bring it to our application

//set up home route
app.get('/')..........

//go to terminal and test if server is working---NODEMON SERVER.JS(restarts whenever we save code) OPEN NEW TAB

**can refactor homepage to be our actualy homepage
app.get('/', function(req, res){
	res.render('index');

});

////SET UP API ROUTES

app.get...
res.render({ });


//NEED TO CHANGE SERVER HBS(ADD SLASH --ONLY BECAUSE WERE USING HBS ON SERVER)




///MONGO    MODELS IS ALWAYS SINGULAR!!!!!!!!

mkdir models
touch models/workouts.js ----SCHEMA STUFF!!!! type of attributes and data types



switched to db workout-app
db.workouts.insert();






                            

                            

















